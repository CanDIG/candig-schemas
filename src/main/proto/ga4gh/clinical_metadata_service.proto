syntax = "proto3";

package ga4gh;

import "ga4gh/schemas/ga4gh/clinical_metadata.proto";
import "ga4gh/schemas/ga4gh/common.proto";
import "ga4gh/schemas/google/api/annotations.proto";


service ClinicalMetadataService {

    // ======================================================
    // Gets a list of Patients accessible through the API.
    // ======================================================
    // `POST /patients/search` must accept a JSON version of
    // `SearchPatientsRequest` as the post body and will return a JSON version
    // of `SearchPatientsResponse`.
    rpc SearchPatients(SearchPatientsRequest)
        returns (SearchPatientsResponse) {
            option (google.api.http) = {
                post: "/v0.6.0a10/patients/search"
                body: "*"
            };
        };

    // ======================================================
    // Gets a list of Enrollments accessible through the API.
    // ======================================================
    // `POST /enrollments/search` must accept a JSON version of
    // `SearchEnrollmentsRequest` as the post body and will return a JSON version
    // of `SearchEnrollmentsResponse`.
    rpc SearchEnrollments(SearchEnrollmentsRequest)
        returns (SearchEnrollmentsResponse) {
            option (google.api.http) = {
                post: "/v0.6.0a10/enrollments/search"
                body: "*"
            };
        };

    // ======================================================
    // Gets a list of Consents accessible through the API.
    // ======================================================
    // `POST /consents/search` must accept a JSON version of
    // `SearchConsentsRequest` as the post body and will return a JSON version
    // of `SearchConsentsResponse`.
    rpc SearchConsents(SearchConsentsRequest)
        returns (SearchConsentsResponse) {
            option (google.api.http) = {
                post: "/v0.6.0a10/consents/search"
                body: "*"
            };
        };

    // ======================================================
    // Gets a list of Diagnosiss accessible through the API.
    // ======================================================
    // `POST /diagnosiss/search` must accept a JSON version of
    // `SearchDiagnosissRequest` as the post body and will return a JSON version
    // of `SearchDiagnosissResponse`.
    rpc SearchDiagnosiss(SearchDiagnosissRequest)
        returns (SearchDiagnosissResponse) {
            option (google.api.http) = {
                post: "/v0.6.0a10/diagnosiss/search"
                body: "*"
            };
        };

    // ======================================================
    // Gets a list of Samples accessible through the API.
    // ======================================================
    // `POST /samples/search` must accept a JSON version of
    // `SearchSamplesRequest` as the post body and will return a JSON version
    // of `SearchSamplesResponse`.
    rpc SearchSamples(SearchSamplesRequest)
        returns (SearchSamplesResponse) {
            option (google.api.http) = {
                post: "/v0.6.0a10/samples/search"
                body: "*"
            };
        };

    // ======================================================
    // Gets a list of Treatments accessible through the API.
    // ======================================================
    // `POST /treatments/search` must accept a JSON version of
    // `SearchTreatmentsRequest` as the post body and will return a JSON version
    // of `SearchTreatmentsResponse`.
    rpc SearchTreatments(SearchTreatmentsRequest)
        returns (SearchTreatmentsResponse) {
            option (google.api.http) = {
                post: "/v0.6.0a10/treatments/search"
                body: "*"
            };
        };

    // ======================================================
    // Gets a list of Outcomes accessible through the API.
    // ======================================================
    // `POST /outcomes/search` must accept a JSON version of
    // `SearchOutcomesRequest` as the post body and will return a JSON version
    // of `SearchOutcomesResponse`.
    rpc SearchOutcomes(SearchOutcomesRequest)
        returns (SearchOutcomesResponse) {
            option (google.api.http) = {
                post: "/v0.6.0a10/outcomes/search"
                body: "*"
            };
        };

    // ======================================================
    // Gets a list of Complications accessible through the API.
    // ======================================================
    // `POST /complications/search` must accept a JSON version of
    // `SearchComplicationsRequest` as the post body and will return a JSON version
    // of `SearchComplicationsResponse`.
    rpc SearchComplications(SearchComplicationsRequest)
        returns (SearchComplicationsResponse) {
            option (google.api.http) = {
                post: "/v0.6.0a10/complications/search"
                body: "*"
            };
        };

    // ======================================================
    // Gets a list of Tumourboards accessible through the API.
    // ======================================================
    // `POST /tumourboards/search` must accept a JSON version of
    // `SearchTumourboardsRequest` as the post body and will return a JSON version
    // of `SearchTumourboardsResponse`.
    rpc SearchTumourboards(SearchTumourboardsRequest)
        returns (SearchTumourboardsResponse) {
            option (google.api.http) = {
                post: "/v0.6.0a10/tumourboards/search"
                body: "*"
            };
        };


    // ======================================================
    // Gets `Patient` by ID.
    // ======================================================
    // `GET /patients/{id}` will return a JSON version of `Patient`.
    rpc GetPatient(GetPatientRequest)
        returns (Patient) {
            option (google.api.http) = {
                get: "/v0.6.0a10/patients/{patient_id}"
            };
        };

    // ======================================================
    // Gets `Enrollment` by ID.
    // ======================================================
    // `GET /enrollments/{id}` will return a JSON version of `Enrollment`.
    rpc GetEnrollment(GetEnrollmentRequest)
        returns (Enrollment) {
            option (google.api.http) = {
                get: "/v0.6.0a10/enrollments/{enrollment_id}"
            };
        };

    // ======================================================
    // Gets `Consent` by ID.
    // ======================================================
    // `GET /consents/{id}` will return a JSON version of `Consent`.
    rpc GetConsent(GetConsentRequest)
        returns (Consent) {
            option (google.api.http) = {
                get: "/v0.6.0a10/consents/{consent_id}"
            };
        };

    // ======================================================
    // Gets `Diagnosis` by ID.
    // ======================================================
    // `GET /diagnosiss/{id}` will return a JSON version of `Diagnosis`.
    rpc GetDiagnosis(GetDiagnosisRequest)
        returns (Diagnosis) {
            option (google.api.http) = {
                get: "/v0.6.0a10/diagnosiss/{diagnosis_id}"
            };
        };

    // ======================================================
    // Gets `Sample` by ID.
    // ======================================================
    // `GET /samples/{id}` will return a JSON version of `Sample`.
    rpc GetSample(GetSampleRequest)
        returns (Sample) {
            option (google.api.http) = {
                get: "/v0.6.0a10/samples/{sample_id}"
            };
        };

    // ======================================================
    // Gets `Treatment` by ID.
    // ======================================================
    // `GET /treatments/{id}` will return a JSON version of `Treatment`.
    rpc GetTreatment(GetTreatmentRequest)
        returns (Treatment) {
            option (google.api.http) = {
                get: "/v0.6.0a10/treatments/{treatment_id}"
            };
        };

    // ======================================================
    // Gets `Outcome` by ID.
    // ======================================================
    // `GET /outcomes/{id}` will return a JSON version of `Outcome`.
    rpc GetOutcome(GetOutcomeRequest)
        returns (Outcome) {
            option (google.api.http) = {
                get: "/v0.6.0a10/outcomes/{outcome_id}"
            };
        };

    // ======================================================
    // Gets `Complication` by ID.
    // ======================================================
    // `GET /complications/{id}` will return a JSON version of `Complication`.
    rpc GetComplication(GetComplicationRequest)
        returns (Complication) {
            option (google.api.http) = {
                get: "/v0.6.0a10/complications/{complication_id}"
            };
        };

    // ======================================================
    // Gets `Tumourboard` by ID.
    // ======================================================
    // `GET /tumourboards/{id}` will return a JSON version of `Tumourboard`.
    rpc GetTumourboard(GetTumourboardRequest)
        returns (Tumourboard) {
            option (google.api.http) = {
                get: "/v0.6.0a10/tumourboards/{tumourboard_id}"
            };
        };

}

// ======================================================
// Patient
// ======================================================
// This request maps to the body of `POST /patients/search` as JSON.
message SearchPatientsRequest {
    // Optionally specify the dataset to search within.
    string dataset_id = 1;

    // Returns Patients with the given name found by case-sensitive string matching.
    string name = 2;

    // Specifies the maximum number of results to return in a single page.
    // If unspecified, a system default will be used.
    int32 page_size = 3;

    // The continuation token, which is used to page through large result sets.
    // To get the next page of results, set this parameter to the value of
    // `nextPageToken` from the previous response.
    string page_token = 4;
    }

// This request maps to the URL `GET /patients/{patient_id}`.
message GetPatientRequest {
    // The ID of the patient requested
    string patient_id = 1;
    }

//This is the response from `POST /patients/search` expressed as JSON.
message SearchPatientsResponse {
    // The list of patients.
    repeated Patient patients = 1;

    // The continuation token, which is used to page through large result sets.
    // Provide this value in a subsequent request to return the next page of
    // results. This field will be empty if there aren't any additional results.
    string next_page_token = 2;
    }

// ======================================================
// Enrollment
// ======================================================
// This request maps to the body of `POST /enrollments/search` as JSON.
message SearchEnrollmentsRequest {
    // Optionally specify the dataset to search within.
    string dataset_id = 1;

    // Returns Enrollments with the given name found by case-sensitive string matching.
    string name = 2;

    // Option to filter for a patient id
    string patient_id = 3;

    // Specifies the maximum number of results to return in a single page.
    // If unspecified, a system default will be used.
    int32 page_size = 4;

    // The continuation token, which is used to page through large result sets.
    // To get the next page of results, set this parameter to the value of
    // `nextPageToken` from the previous response.
    string page_token = 5;
    }

// This request maps to the URL `GET /enrollments/{enrollment_id}`.
message GetEnrollmentRequest {
    // The ID of the enrollment requested
    string enrollment_id = 1;
    }

//This is the response from `POST /enrollments/search` expressed as JSON.
message SearchEnrollmentsResponse {
    // The list of enrollments.
    repeated Enrollment enrollments = 1;

    // The continuation token, which is used to page through large result sets.
    // Provide this value in a subsequent request to return the next page of
    // results. This field will be empty if there aren't any additional results.
    string next_page_token = 2;
    }

// ======================================================
// Consent
// ======================================================
// This request maps to the body of `POST /consents/search` as JSON.
message SearchConsentsRequest {
    // Optionally specify the dataset to search within.
    string dataset_id = 1;

    // Returns Consents with the given name found by case-sensitive string matching.
    string name = 2;

    // Option to filter for a patient id
    string patient_id = 3;

    // Specifies the maximum number of results to return in a single page.
    // If unspecified, a system default will be used.
    int32 page_size = 4;

    // The continuation token, which is used to page through large result sets.
    // To get the next page of results, set this parameter to the value of
    // `nextPageToken` from the previous response.
    string page_token = 5;
    }

// This request maps to the URL `GET /consents/{consent_id}`.
message GetConsentRequest {
    // The ID of the consent requested
    string consent_id = 1;
    }

//This is the response from `POST /consents/search` expressed as JSON.
message SearchConsentsResponse {
    // The list of consents.
    repeated Consent consents = 1;

    // The continuation token, which is used to page through large result sets.
    // Provide this value in a subsequent request to return the next page of
    // results. This field will be empty if there aren't any additional results.
    string next_page_token = 2;
    }

// ======================================================
// Diagnosis
// ======================================================
// This request maps to the body of `POST /diagnosiss/search` as JSON.
message SearchDiagnosissRequest {
    // Optionally specify the dataset to search within.
    string dataset_id = 1;

    // Returns Diagnosiss with the given name found by case-sensitive string matching.
    string name = 2;

    // Option to filter for a patient id
    string patient_id = 3;

    // Specifies the maximum number of results to return in a single page.
    // If unspecified, a system default will be used.
    int32 page_size = 4;

    // The continuation token, which is used to page through large result sets.
    // To get the next page of results, set this parameter to the value of
    // `nextPageToken` from the previous response.
    string page_token = 5;
    }

// This request maps to the URL `GET /diagnosiss/{diagnosis_id}`.
message GetDiagnosisRequest {
    // The ID of the diagnosis requested
    string diagnosis_id = 1;
    }

//This is the response from `POST /diagnosiss/search` expressed as JSON.
message SearchDiagnosissResponse {
    // The list of diagnosiss.
    repeated Diagnosis diagnosiss = 1;

    // The continuation token, which is used to page through large result sets.
    // Provide this value in a subsequent request to return the next page of
    // results. This field will be empty if there aren't any additional results.
    string next_page_token = 2;
    }

// ======================================================
// Sample
// ======================================================
// This request maps to the body of `POST /samples/search` as JSON.
message SearchSamplesRequest {
    // Optionally specify the dataset to search within.
    string dataset_id = 1;

    // Returns Samples with the given name found by case-sensitive string matching.
    string name = 2;

    // Option to filter for a patient id
    string patient_id = 3;

    // Specifies the maximum number of results to return in a single page.
    // If unspecified, a system default will be used.
    int32 page_size = 4;

    // The continuation token, which is used to page through large result sets.
    // To get the next page of results, set this parameter to the value of
    // `nextPageToken` from the previous response.
    string page_token = 5;
    }

// This request maps to the URL `GET /samples/{sample_id}`.
message GetSampleRequest {
    // The ID of the sample requested
    string sample_id = 1;
    }

//This is the response from `POST /samples/search` expressed as JSON.
message SearchSamplesResponse {
    // The list of samples.
    repeated Sample samples = 1;

    // The continuation token, which is used to page through large result sets.
    // Provide this value in a subsequent request to return the next page of
    // results. This field will be empty if there aren't any additional results.
    string next_page_token = 2;
    }

// ======================================================
// Treatment
// ======================================================
// This request maps to the body of `POST /treatments/search` as JSON.
message SearchTreatmentsRequest {
    // Optionally specify the dataset to search within.
    string dataset_id = 1;

    // Returns Treatments with the given name found by case-sensitive string matching.
    string name = 2;

    // Option to filter for a patient id
    string patient_id = 3;

    // Specifies the maximum number of results to return in a single page.
    // If unspecified, a system default will be used.
    int32 page_size = 4;

    // The continuation token, which is used to page through large result sets.
    // To get the next page of results, set this parameter to the value of
    // `nextPageToken` from the previous response.
    string page_token = 5;
    }

// This request maps to the URL `GET /treatments/{treatment_id}`.
message GetTreatmentRequest {
    // The ID of the treatment requested
    string treatment_id = 1;
    }

//This is the response from `POST /treatments/search` expressed as JSON.
message SearchTreatmentsResponse {
    // The list of treatments.
    repeated Treatment treatments = 1;

    // The continuation token, which is used to page through large result sets.
    // Provide this value in a subsequent request to return the next page of
    // results. This field will be empty if there aren't any additional results.
    string next_page_token = 2;
    }

// ======================================================
// Outcome
// ======================================================
// This request maps to the body of `POST /outcomes/search` as JSON.
message SearchOutcomesRequest {
    // Optionally specify the dataset to search within.
    string dataset_id = 1;

    // Returns Outcomes with the given name found by case-sensitive string matching.
    string name = 2;

    // Option to filter for a patient id
    string patient_id = 3;

    // Specifies the maximum number of results to return in a single page.
    // If unspecified, a system default will be used.
    int32 page_size = 4;

    // The continuation token, which is used to page through large result sets.
    // To get the next page of results, set this parameter to the value of
    // `nextPageToken` from the previous response.
    string page_token = 5;
    }

// This request maps to the URL `GET /outcomes/{outcome_id}`.
message GetOutcomeRequest {
    // The ID of the outcome requested
    string outcome_id = 1;
    }

//This is the response from `POST /outcomes/search` expressed as JSON.
message SearchOutcomesResponse {
    // The list of outcomes.
    repeated Outcome outcomes = 1;

    // The continuation token, which is used to page through large result sets.
    // Provide this value in a subsequent request to return the next page of
    // results. This field will be empty if there aren't any additional results.
    string next_page_token = 2;
    }

// ======================================================
// Complication
// ======================================================
// This request maps to the body of `POST /complications/search` as JSON.
message SearchComplicationsRequest {
    // Optionally specify the dataset to search within.
    string dataset_id = 1;

    // Returns Complications with the given name found by case-sensitive string matching.
    string name = 2;

    // Option to filter for a patient id
    string patient_id = 3;

    // Specifies the maximum number of results to return in a single page.
    // If unspecified, a system default will be used.
    int32 page_size = 4;

    // The continuation token, which is used to page through large result sets.
    // To get the next page of results, set this parameter to the value of
    // `nextPageToken` from the previous response.
    string page_token = 5;
    }

// This request maps to the URL `GET /complications/{complication_id}`.
message GetComplicationRequest {
    // The ID of the complication requested
    string complication_id = 1;
    }

//This is the response from `POST /complications/search` expressed as JSON.
message SearchComplicationsResponse {
    // The list of complications.
    repeated Complication complications = 1;

    // The continuation token, which is used to page through large result sets.
    // Provide this value in a subsequent request to return the next page of
    // results. This field will be empty if there aren't any additional results.
    string next_page_token = 2;
    }

// ======================================================
// Tumourboard
// ======================================================
// This request maps to the body of `POST /tumourboards/search` as JSON.
message SearchTumourboardsRequest {
    // Optionally specify the dataset to search within.
    string dataset_id = 1;

    // Returns Tumourboards with the given name found by case-sensitive string matching.
    string name = 2;

    // Option to filter for a patient id
    string patient_id = 3;

    // Specifies the maximum number of results to return in a single page.
    // If unspecified, a system default will be used.
    int32 page_size = 4;

    // The continuation token, which is used to page through large result sets.
    // To get the next page of results, set this parameter to the value of
    // `nextPageToken` from the previous response.
    string page_token = 5;
    }

// This request maps to the URL `GET /tumourboards/{tumourboard_id}`.
message GetTumourboardRequest {
    // The ID of the tumourboard requested
    string tumourboard_id = 1;
    }

//This is the response from `POST /tumourboards/search` expressed as JSON.
message SearchTumourboardsResponse {
    // The list of tumourboards.
    repeated Tumourboard tumourboards = 1;

    // The continuation token, which is used to page through large result sets.
    // Provide this value in a subsequent request to return the next page of
    // results. This field will be empty if there aren't any additional results.
    string next_page_token = 2;
    }
