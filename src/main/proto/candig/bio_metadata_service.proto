syntax = "proto3";

package candig;

import "candig/bio_metadata.proto";
import "candig/common.proto";
import "google/api/annotations.proto";


service BioMetadataService {
  // Gets a list of Individuals accessible through the API.
  // `POST /individuals/search` must accept a JSON version of
  // `SearchIndividualsRequest` as the post body and will return a JSON version
  // of `SearchIndividualsResponse`.
  rpc SearchIndividuals(SearchIndividualsRequest)
    returns (SearchIndividualsResponse) {
      option (google.api.http) = {
        post: "/v0.8.0/individuals/search"
        body: "*"
      };
    };
              
  rpc SearchExperiments(SearchExperimentsRequest)
    returns (SearchExperimentsResponse) {
      option (google.api.http) = {
        post: "/v0.8.0/experiments/search"
        body: "*"
      };
    };
              
  rpc SearchAnalyses(SearchAnalysesRequest)
    returns (SearchAnalysesResponse) {
      option (google.api.http) = {
        post: "/v0.8.0/analyses/search"
        body: "*"
      };
    };
              
  // `POST /biosamples/search` must accept a JSON version of
  // `SearchBiosamplesRequest` as the post body and will return a JSON version
  // of `SearchBiosamplesResponse`.
  rpc SearchBiosamples(SearchBiosamplesRequest)
    returns (SearchBiosamplesResponse) {
      option (google.api.http) = {
        post: "/v0.8.0/biosamples/search"
        body: "*"
      };
    };

  // Gets an `Individual` by ID.
  // `GET /individuals/{id}` will return a JSON version of `Individual`.
  rpc GetIndividual(GetIndividualRequest)
    returns (Individual) {
      option (google.api.http) = {
        get: "/v0.8.0/individuals/{individual_id}"
      };
    };

  rpc GetExperiment(GetExperimentRequest)
    returns (Experiment) {
      option (google.api.http) = {
        get: "/v0.8.0/experiments/{experiment_id}"
      };
    };

  rpc GetAnalysis(GetAnalysisRequest)
    returns (Analysis) {
      option (google.api.http) = {
        get: "/v0.8.0/analyses/{analysis_id}"
      };
    };

  // Gets a `Biosample` by ID.
  // `GET /biosamples/{id}` will return a JSON version of `Biosample`.
  rpc GetBiosample(GetBiosampleRequest)
    returns (Biosample) {
        option (google.api.http) = {
          get: "/v0.8.0/biosamples/{biosample_id}"
        };
      };
}
// *********************  /individuals ********************************
// This request maps to the body of `POST /individuals/search` as JSON.
message SearchIndividualsRequest {
  // Optionally specify the dataset to search within.
  string dataset_id = 1;

  // Returns Individuals with the given name found by case-sensitive string matching.
  string name = 2;

  // Specifies the maximum number of results to return in a single page.
  // If unspecified, a system default will be used.
  int32 page_size = 3;

  // The continuation token, which is used to page through large result sets.
  // To get the next page of results, set this parameter to the value of
  // `nextPageToken` from the previous response.
  string page_token = 4;
  
//### ===================================================================== ###
//# CANDIG MODIFICATION BEGIN
//### ===================================================================== ###
  
  //
  string type = 5;
//### ===================================================================== ###
//# CANDIG MODIFICATION END
//### ===================================================================== ###
}

// This request maps to the URL `GET /individuals/{individual_id}`.
message GetIndividualRequest {
  // The ID of the individual requested
  string individual_id = 1;
}

//This is the response from `POST /individuals/search` expressed as JSON.
message SearchIndividualsResponse {
  // The list of individuals.
  repeated Individual individuals = 1;

  // The continuation token, which is used to page through large result sets.
  // Provide this value in a subsequent request to return the next page of
  // results. This field will be empty if there aren't any additional results.
  string next_page_token = 2;
}

message TempoRequest {
  string valami = 1;        
}

message TempoResponse {
  string valami = 1;        
}

// *********************  /biosamples ********************************
//This is the request sent to `POST /biosamples/search` expressed as JSON.
message SearchBiosamplesRequest {
  // Optionally specify the dataset to search within.
  string dataset_id = 1;
  
  // Returns Biosamples with the given name found by case-sensitive string matching.
  string name = 2;
  
  // Returns Biosamples for the provided individual ID.
  string individual_id = 3;
  
  // Specifies the maximum number of results to return in a single page.
  // If unspecified, a system default will be used.
  int32 page_size = 4;
  
  // The continuation token, which is used to page through large result sets.
  // To get the next page of results, set this parameter to the value of
  // `nextPageToken` from the previous response.
  string page_token = 5;
}

// This request maps to the URL `GET /biosamples/{biosample_id}`.
message GetBiosampleRequest {
  // The ID of the biosample requested
  string biosample_id = 1;
}

//This is the response from `POST /biosamples/search` expressed as JSON.
message SearchBiosamplesResponse {
  // The list of biosamples.
  repeated Biosample biosamples = 1;

  // The continuation token, which is used to page through large result sets.
  // Provide this value in a subsequent request to return the next page of
  // results. This field will be empty if there aren't any additional results.
  string next_page_token = 2;
}

// *********************  /experiments ********************************
//This is the request sent to `POST /experiments/search` expressed as JSON.
message SearchExperimentsRequest {
  // Returns Experiments with the given name found by case-sensitive string matching.
  string name = 1;
  
  // Returns Experiments for the provided biosample ID.
  // unimplemented
  string biosample_id = 2;
  
  // Specifies the maximum number of results to return in a single page.
  // If unspecified, a system default will be used.
  int32 page_size = 3;
  
  // The continuation token, which is used to page through large result sets.
  // To get the next page of results, set this parameter to the value of
  // `nextPageToken` from the previous response.
  string page_token = 4;
}

// This request maps to the URL `GET /experiments/{experiment_id}`.
message GetExperimentRequest {
  // The ID of the experiment requested
  string experiment_id = 1;
}

//This is the response from `POST /experiments/search` expressed as JSON.
message SearchExperimentsResponse {
  // The list of experiments.
  repeated Experiment experiments = 1;

  // The continuation token, which is used to page through large result sets.
  // Provide this value in a subsequent request to return the next page of
  // results. This field will be empty if there aren't any additional results.
  string next_page_token = 2;
}

// *********************  /analyses ********************************
//This is the request sent to `POST /analyses/search` expressed as JSON.
message SearchAnalysesRequest {
  // Returns Analyses with the given name found by case-sensitive string matching.
  string name = 1;
  
  // Returns Analyses for the provided biosample ID.
  // unimplemented
  string biosample_id = 2;
  
  // Specifies the maximum number of results to return in a single page.
  // If unspecified, a system default will be used.
  int32 page_size = 3;
  
  // The continuation token, which is used to page through large result sets.
  // To get the next page of results, set this parameter to the value of
  // `nextPageToken` from the previous response.
  string page_token = 4;
}

// This request maps to the URL `GET /experiments/{experiment_id}`.
message GetAnalysisRequest {
  // The ID of the analysis requested
  string analysis_id = 1;
}

//This is the response from `POST /experiments/search` expressed as JSON.
message SearchAnalysesResponse {
  // The list of experiments.
  repeated Analysis analyses = 1;

  // The continuation token, which is used to page through large result sets.
  // Provide this value in a subsequent request to return the next page of
  // results. This field will be empty if there aren't any additional results.
  string next_page_token = 2;
}