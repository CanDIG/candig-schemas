syntax = "proto3";

package candig;

import "candig/clinical_metadata.proto";
import "candig/common.proto";
import "google/api/annotations.proto";


service ClinicalMetadataService {

    // ======================================================
    // Gets a list of Patients accessible through the API.
    // ======================================================
    // `POST /patients/search` must accept a JSON version of
    // `SearchPatientsRequest` as the post body and will return a JSON version
    // of `SearchPatientsResponse`.
    rpc SearchPatients(SearchPatientsRequest)
        returns (SearchPatientsResponse) {
            option (google.api.http) = {
                post: "/v0.8.0/patients/search"
                body: "*"
            };
        };

    // ======================================================
    // Gets a list of Enrollments accessible through the API.
    // ======================================================
    // `POST /enrollments/search` must accept a JSON version of
    // `SearchEnrollmentsRequest` as the post body and will return a JSON version
    // of `SearchEnrollmentsResponse`.
    rpc SearchEnrollments(SearchEnrollmentsRequest)
        returns (SearchEnrollmentsResponse) {
            option (google.api.http) = {
                post: "/v0.8.0/enrollments/search"
                body: "*"
            };
        };

    // ======================================================
    // Gets a list of Consents accessible through the API.
    // ======================================================
    // `POST /consents/search` must accept a JSON version of
    // `SearchConsentsRequest` as the post body and will return a JSON version
    // of `SearchConsentsResponse`.
    rpc SearchConsents(SearchConsentsRequest)
        returns (SearchConsentsResponse) {
            option (google.api.http) = {
                post: "/v0.8.0/consents/search"
                body: "*"
            };
        };

    // ======================================================
    // Gets a list of Diagnoses accessible through the API.
    // ======================================================
    // `POST /diagnoses/search` must accept a JSON version of
    // `SearchDiagnosesRequest` as the post body and will return a JSON version
    // of `SearchDiagnosesResponse`.
    rpc SearchDiagnoses(SearchDiagnosesRequest)
        returns (SearchDiagnosesResponse) {
            option (google.api.http) = {
                post: "/v0.8.0/diagnoses/search"
                body: "*"
            };
        };

    // ======================================================
    // Gets a list of Samples accessible through the API.
    // ======================================================
    // `POST /samples/search` must accept a JSON version of
    // `SearchSamplesRequest` as the post body and will return a JSON version
    // of `SearchSamplesResponse`.
    rpc SearchSamples(SearchSamplesRequest)
        returns (SearchSamplesResponse) {
            option (google.api.http) = {
                post: "/v0.8.0/samples/search"
                body: "*"
            };
        };

    // ======================================================
    // Gets a list of Treatments accessible through the API.
    // ======================================================
    // `POST /treatments/search` must accept a JSON version of
    // `SearchTreatmentsRequest` as the post body and will return a JSON version
    // of `SearchTreatmentsResponse`.
    rpc SearchTreatments(SearchTreatmentsRequest)
        returns (SearchTreatmentsResponse) {
            option (google.api.http) = {
                post: "/v0.8.0/treatments/search"
                body: "*"
            };
        };

    // ======================================================
    // Gets a list of Outcomes accessible through the API.
    // ======================================================
    // `POST /outcomes/search` must accept a JSON version of
    // `SearchOutcomesRequest` as the post body and will return a JSON version
    // of `SearchOutcomesResponse`.
    rpc SearchOutcomes(SearchOutcomesRequest)
        returns (SearchOutcomesResponse) {
            option (google.api.http) = {
                post: "/v0.8.0/outcomes/search"
                body: "*"
            };
        };

    // ======================================================
    // Gets a list of Complications accessible through the API.
    // ======================================================
    // `POST /complications/search` must accept a JSON version of
    // `SearchComplicationsRequest` as the post body and will return a JSON version
    // of `SearchComplicationsResponse`.
    rpc SearchComplications(SearchComplicationsRequest)
        returns (SearchComplicationsResponse) {
            option (google.api.http) = {
                post: "/v0.8.0/complications/search"
                body: "*"
            };
        };

    // ======================================================
    // Gets a list of Tumourboards accessible through the API.
    // ======================================================
    // `POST /tumourboards/search` must accept a JSON version of
    // `SearchTumourboardsRequest` as the post body and will return a JSON version
    // of `SearchTumourboardsResponse`.
    rpc SearchTumourboards(SearchTumourboardsRequest)
        returns (SearchTumourboardsResponse) {
            option (google.api.http) = {
                post: "/v0.8.0/tumourboards/search"
                body: "*"
            };
        };


    // ======================================================
    // Gets `Patient` by ID.
    // ======================================================
    // `GET /patients/{id}` will return a JSON version of `Patient`.
    rpc GetPatient(GetPatientRequest)
        returns (Patient) {
            option (google.api.http) = {
                get: "/v0.8.0/patients/{patient_id}"
            };
        };

    // ======================================================
    // Gets `Enrollment` by ID.
    // ======================================================
    // `GET /enrollments/{id}` will return a JSON version of `Enrollment`.
    rpc GetEnrollment(GetEnrollmentRequest)
        returns (Enrollment) {
            option (google.api.http) = {
                get: "/v0.8.0/enrollments/{enrollment_id}"
            };
        };

    // ======================================================
    // Gets `Consent` by ID.
    // ======================================================
    // `GET /consents/{id}` will return a JSON version of `Consent`.
    rpc GetConsent(GetConsentRequest)
        returns (Consent) {
            option (google.api.http) = {
                get: "/v0.8.0/consents/{consent_id}"
            };
        };

    // ======================================================
    // Gets `Diagnosis` by ID.
    // ======================================================
    // `GET /diagnoses/{id}` will return a JSON version of `Diagnosis`.
    rpc GetDiagnosis(GetDiagnosisRequest)
        returns (Diagnosis) {
            option (google.api.http) = {
                get: "/v0.8.0/diagnoses/{diagnosis_id}"
            };
        };

    // ======================================================
    // Gets `Sample` by ID.
    // ======================================================
    // `GET /samples/{id}` will return a JSON version of `Sample`.
    rpc GetSample(GetSampleRequest)
        returns (Sample) {
            option (google.api.http) = {
                get: "/v0.8.0/samples/{sample_id}"
            };
        };

    // ======================================================
    // Gets `Treatment` by ID.
    // ======================================================
    // `GET /treatments/{id}` will return a JSON version of `Treatment`.
    rpc GetTreatment(GetTreatmentRequest)
        returns (Treatment) {
            option (google.api.http) = {
                get: "/v0.8.0/treatments/{treatment_id}"
            };
        };

    // ======================================================
    // Gets `Outcome` by ID.
    // ======================================================
    // `GET /outcomes/{id}` will return a JSON version of `Outcome`.
    rpc GetOutcome(GetOutcomeRequest)
        returns (Outcome) {
            option (google.api.http) = {
                get: "/v0.8.0/outcomes/{outcome_id}"
            };
        };

    // ======================================================
    // Gets `Complication` by ID.
    // ======================================================
    // `GET /complications/{id}` will return a JSON version of `Complication`.
    rpc GetComplication(GetComplicationRequest)
        returns (Complication) {
            option (google.api.http) = {
                get: "/v0.8.0/complications/{complication_id}"
            };
        };

    // ======================================================
    // Gets `Tumourboard` by ID.
    // ======================================================
    // `GET /tumourboards/{id}` will return a JSON version of `Tumourboard`.
    rpc GetTumourboard(GetTumourboardRequest)
        returns (Tumourboard) {
            option (google.api.http) = {
                get: "/v0.8.0/tumourboards/{tumourboard_id}"
            };
        };

     // ======================================================
    // Gets a list of Chemotherapies accessible through the API.
    // ======================================================
    // `POST /chemotherapies/search` must accept a JSON version of
    // `SearchChemotherapiesRequest` as the post body and will return a JSON version
    // of `SearchChemotherapiesResponse`.
    rpc SearchChemotherapies(SearchChemotherapiesRequest)
        returns (SearchChemotherapiesResponse) {
            option (google.api.http) = {
                post: "/v0.8.0/chemotherapies/search"
                body: "*"
            };
        };

    // ======================================================
    // Gets a list of Radiotherapies accessible through the API.
    // ======================================================
    // `POST /radiotherapies/search` must accept a JSON version of
    // `SearchRadiotherapiesRequest` as the post body and will return a JSON version
    // of `SearchRadiotherapiesResponse`.
    rpc SearchRadiotherapies(SearchRadiotherapiesRequest)
        returns (SearchRadiotherapiesResponse) {
            option (google.api.http) = {
                post: "/v0.8.0/radiotherapies/search"
                body: "*"
            };
        };

    // ======================================================
    // Gets a list of Surgeries accessible through the API.
    // ======================================================
    // `POST /surgeries/search` must accept a JSON version of
    // `SearchSurgeriesRequest` as the post body and will return a JSON version
    // of `SearchSurgeriesResponse`.
    rpc SearchSurgeries(SearchSurgeriesRequest)
        returns (SearchSurgeriesResponse) {
            option (google.api.http) = {
                post: "/v0.8.0/surgeries/search"
                body: "*"
            };
        };

    // ======================================================
    // Gets a list of Immunotherapies accessible through the API.
    // ======================================================
    // `POST /immunotherapies/search` must accept a JSON version of
    // `SearchImmunotherapiesRequest` as the post body and will return a JSON version
    // of `SearchImmunotherapiesResponse`.
    rpc SearchImmunotherapies(SearchImmunotherapiesRequest)
        returns (SearchImmunotherapiesResponse) {
            option (google.api.http) = {
                post: "/v0.8.0/immunotherapies/search"
                body: "*"
            };
        };

    // ======================================================
    // Gets a list of Celltransplants accessible through the API.
    // ======================================================
    // `POST /celltransplants/search` must accept a JSON version of
    // `SearchCelltransplantsRequest` as the post body and will return a JSON version
    // of `SearchCelltransplantsResponse`.
    rpc SearchCelltransplants(SearchCelltransplantsRequest)
        returns (SearchCelltransplantsResponse) {
            option (google.api.http) = {
                post: "/v0.8.0/celltransplants/search"
                body: "*"
            };
        };

    // ======================================================
    // Gets a list of Slides accessible through the API.
    // ======================================================
    // `POST /slides/search` must accept a JSON version of
    // `SearchSlidesRequest` as the post body and will return a JSON version
    // of `SearchSlidesResponse`.
    rpc SearchSlides(SearchSlidesRequest)
        returns (SearchSlidesResponse) {
            option (google.api.http) = {
                post: "/v0.8.0/slides/search"
                body: "*"
            };
        };

    // ======================================================
    // Gets a list of Studies accessible through the API.
    // ======================================================
    // `POST /studies/search` must accept a JSON version of
    // `SearchStudiesRequest` as the post body and will return a JSON version
    // of `SearchStudiesResponse`.
    rpc SearchStudies(SearchStudiesRequest)
        returns (SearchStudiesResponse) {
            option (google.api.http) = {
                post: "/v0.8.0/studies/search"
                body: "*"
            };
        };

    // ======================================================
    // Gets a list of Labtests accessible through the API.
    // ======================================================
    // `POST /labtests/search` must accept a JSON version of
    // `SearchLabtestsRequest` as the post body and will return a JSON version
    // of `SearchLabtestsResponse`.
    rpc SearchLabtests(SearchLabtestsRequest)
        returns (SearchLabtestsResponse) {
            option (google.api.http) = {
                post: "/v0.8.0/labtests/search"
                body: "*"
            };
        };


    // ======================================================
    // Gets `Chemotherapy` by ID.
    // ======================================================
    // `GET /chemotherapies/{id}` will return a JSON version of `Chemotherapy`.
    rpc GetChemotherapy(GetChemotherapyRequest)
        returns (Chemotherapy) {
            option (google.api.http) = {
                get: "/v0.8.0/chemotherapies/{chemotherapy_id}"
            };
        };

    // ======================================================
    // Gets `Radiotherapy` by ID.
    // ======================================================
    // `GET /radiotherapies/{id}` will return a JSON version of `Radiotherapy`.
    rpc GetRadiotherapy(GetRadiotherapyRequest)
        returns (Radiotherapy) {
            option (google.api.http) = {
                get: "/v0.8.0/radiotherapies/{radiotherapy_id}"
            };
        };

    // ======================================================
    // Gets `Surgery` by ID.
    // ======================================================
    // `GET /surgeries/{id}` will return a JSON version of `Surgery`.
    rpc GetSurgery(GetSurgeryRequest)
        returns (Surgery) {
            option (google.api.http) = {
                get: "/v0.8.0/surgeries/{surgery_id}"
            };
        };

    // ======================================================
    // Gets `Immunotherapy` by ID.
    // ======================================================
    // `GET /immunotherapies/{id}` will return a JSON version of `Immunotherapy`.
    rpc GetImmunotherapy(GetImmunotherapyRequest)
        returns (Immunotherapy) {
            option (google.api.http) = {
                get: "/v0.8.0/immunotherapies/{immunotherapy_id}"
            };
        };

    // ======================================================
    // Gets `Celltransplant` by ID.
    // ======================================================
    // `GET /celltransplants/{id}` will return a JSON version of `Celltransplant`.
    rpc GetCelltransplant(GetCelltransplantRequest)
        returns (Celltransplant) {
            option (google.api.http) = {
                get: "/v0.8.0/celltransplants/{celltransplant_id}"
            };
        };

    // ======================================================
    // Gets `Slide` by ID.
    // ======================================================
    // `GET /slides/{id}` will return a JSON version of `Slide`.
    rpc GetSlide(GetSlideRequest)
        returns (Slide) {
            option (google.api.http) = {
                get: "/v0.8.0/slides/{slide_id}"
            };
        };

    // ======================================================
    // Gets `Study` by ID.
    // ======================================================
    // `GET /studies/{id}` will return a JSON version of `Study`.
    rpc GetStudy(GetStudyRequest)
        returns (Study) {
            option (google.api.http) = {
                get: "/v0.8.0/studies/{study_id}"
            };
        };

    // ======================================================
    // Gets `Labtest` by ID.
    // ======================================================
    // `GET /labtests/{id}` will return a JSON version of `Labtest`.
    rpc GetLabtest(GetLabtestRequest)
        returns (Labtest) {
            option (google.api.http) = {
                get: "/v0.8.0/labtests/{labtest_id}"
            };
        };


}

// ======================================================
// Patient
// ======================================================
// This request maps to the body of `POST /patients/search` as JSON.
message SearchPatientsRequest {
    // Optionally specify the dataset to search within.
    string dataset_id = 1;

    // Returns Patients with the given name found by case-sensitive string matching.
    string name = 2;
    
    // Filter on any of the fields
    repeated Filter filters = 3;

    // Specifies the maximum number of results to return in a single page.
    // If unspecified, a system default will be used.
    int32 page_size = 4;

    // The continuation token, which is used to page through large result sets.
    // To get the next page of results, set this parameter to the value of
    // `nextPageToken` from the previous response.
    string page_token = 5;
    }

// This request maps to the URL `GET /patients/{patient_id}`.
message GetPatientRequest {
    // The ID of the patient requested
    string patient_id = 1;
    }

//This is the response from `POST /patients/search` expressed as JSON.
message SearchPatientsResponse {
    // The list of patients.
    repeated Patient patients = 1;

    // The continuation token, which is used to page through large result sets.
    // Provide this value in a subsequent request to return the next page of
    // results. This field will be empty if there aren't any additional results.
    string next_page_token = 2;
    }

// ======================================================
// Enrollment
// ======================================================
// This request maps to the body of `POST /enrollments/search` as JSON.
message SearchEnrollmentsRequest {
    // Optionally specify the dataset to search within.
    string dataset_id = 1;

    // Returns Enrollments with the given name found by case-sensitive string matching.
    string name = 2;

    // Filter on any of the fields
    repeated Filter filters = 3;

    // Specifies the maximum number of results to return in a single page.
    // If unspecified, a system default will be used.
    int32 page_size = 4;

    // The continuation token, which is used to page through large result sets.
    // To get the next page of results, set this parameter to the value of
    // `nextPageToken` from the previous response.
    string page_token = 5;
    }

// This request maps to the URL `GET /enrollments/{enrollment_id}`.
message GetEnrollmentRequest {
    // The ID of the enrollment requested
    string enrollment_id = 1;
    }

//This is the response from `POST /enrollments/search` expressed as JSON.
message SearchEnrollmentsResponse {
    // The list of enrollments.
    repeated Enrollment enrollments = 1;

    // The continuation token, which is used to page through large result sets.
    // Provide this value in a subsequent request to return the next page of
    // results. This field will be empty if there aren't any additional results.
    string next_page_token = 2;
    }

// ======================================================
// Consent
// ======================================================
// This request maps to the body of `POST /consents/search` as JSON.
message SearchConsentsRequest {
    // Optionally specify the dataset to search within.
    string dataset_id = 1;

    // Returns Consents with the given name found by case-sensitive string matching.
    string name = 2;

    // Filter on any of the fields
    repeated Filter filters = 3;

    // Specifies the maximum number of results to return in a single page.
    // If unspecified, a system default will be used.
    int32 page_size = 4;

    // The continuation token, which is used to page through large result sets.
    // To get the next page of results, set this parameter to the value of
    // `nextPageToken` from the previous response.
    string page_token = 5;
    }

// This request maps to the URL `GET /consents/{consent_id}`.
message GetConsentRequest {
    // The ID of the consent requested
    string consent_id = 1;
    }

//This is the response from `POST /consents/search` expressed as JSON.
message SearchConsentsResponse {
    // The list of consents.
    repeated Consent consents = 1;

    // The continuation token, which is used to page through large result sets.
    // Provide this value in a subsequent request to return the next page of
    // results. This field will be empty if there aren't any additional results.
    string next_page_token = 2;
    }

// ======================================================
// Diagnosis
// ======================================================
// This request maps to the body of `POST /diagnoses/search` as JSON.
message SearchDiagnosesRequest {
    // Optionally specify the dataset to search within.
    string dataset_id = 1;

    // Returns Diagnoses with the given name found by case-sensitive string matching.
    string name = 2;

    // Filter on any of the fields
    repeated Filter filters = 3;

    // Specifies the maximum number of results to return in a single page.
    // If unspecified, a system default will be used.
    int32 page_size = 4;

    // The continuation token, which is used to page through large result sets.
    // To get the next page of results, set this parameter to the value of
    // `nextPageToken` from the previous response.
    string page_token = 5;
    }

// This request maps to the URL `GET /diagnoses/{diagnosis_id}`.
message GetDiagnosisRequest {
    // The ID of the diagnosis requested
    string diagnosis_id = 1;
    }

//This is the response from `POST /diagnoses/search` expressed as JSON.
message SearchDiagnosesResponse {
    // The list of diagnoses.
    repeated Diagnosis diagnoses = 1;

    // The continuation token, which is used to page through large result sets.
    // Provide this value in a subsequent request to return the next page of
    // results. This field will be empty if there aren't any additional results.
    string next_page_token = 2;
    }

// ======================================================
// Sample
// ======================================================
// This request maps to the body of `POST /samples/search` as JSON.
message SearchSamplesRequest {
    // Optionally specify the dataset to search within.
    string dataset_id = 1;

    // Returns Samples with the given name found by case-sensitive string matching.
    string name = 2;

    // Filter on any of the fields
    repeated Filter filters = 3;

    // Specifies the maximum number of results to return in a single page.
    // If unspecified, a system default will be used.
    int32 page_size = 4;

    // The continuation token, which is used to page through large result sets.
    // To get the next page of results, set this parameter to the value of
    // `nextPageToken` from the previous response.
    string page_token = 5;
    }

// This request maps to the URL `GET /samples/{sample_id}`.
message GetSampleRequest {
    // The ID of the sample requested
    string sample_id = 1;
    }

//This is the response from `POST /samples/search` expressed as JSON.
message SearchSamplesResponse {
    // The list of samples.
    repeated Sample samples = 1;

    // The continuation token, which is used to page through large result sets.
    // Provide this value in a subsequent request to return the next page of
    // results. This field will be empty if there aren't any additional results.
    string next_page_token = 2;
    }

// ======================================================
// Treatment
// ======================================================
// This request maps to the body of `POST /treatments/search` as JSON.
message SearchTreatmentsRequest {
    // Optionally specify the dataset to search within.
    string dataset_id = 1;

    // Returns Treatments with the given name found by case-sensitive string matching.
    string name = 2;

    // Filter on any of the fields
    repeated Filter filters = 3;

    // Specifies the maximum number of results to return in a single page.
    // If unspecified, a system default will be used.
    int32 page_size = 4;

    // The continuation token, which is used to page through large result sets.
    // To get the next page of results, set this parameter to the value of
    // `nextPageToken` from the previous response.
    string page_token = 5;
    }

// This request maps to the URL `GET /treatments/{treatment_id}`.
message GetTreatmentRequest {
    // The ID of the treatment requested
    string treatment_id = 1;
    }

//This is the response from `POST /treatments/search` expressed as JSON.
message SearchTreatmentsResponse {
    // The list of treatments.
    repeated Treatment treatments = 1;

    // The continuation token, which is used to page through large result sets.
    // Provide this value in a subsequent request to return the next page of
    // results. This field will be empty if there aren't any additional results.
    string next_page_token = 2;
    }

// ======================================================
// Outcome
// ======================================================
// This request maps to the body of `POST /outcomes/search` as JSON.
message SearchOutcomesRequest {
    // Optionally specify the dataset to search within.
    string dataset_id = 1;

    // Returns Outcomes with the given name found by case-sensitive string matching.
    string name = 2;

    // Filter on any of the fields
    repeated Filter filters = 3;

    // Specifies the maximum number of results to return in a single page.
    // If unspecified, a system default will be used.
    int32 page_size = 4;

    // The continuation token, which is used to page through large result sets.
    // To get the next page of results, set this parameter to the value of
    // `nextPageToken` from the previous response.
    string page_token = 5;
    }

// This request maps to the URL `GET /outcomes/{outcome_id}`.
message GetOutcomeRequest {
    // The ID of the outcome requested
    string outcome_id = 1;
    }

//This is the response from `POST /outcomes/search` expressed as JSON.
message SearchOutcomesResponse {
    // The list of outcomes.
    repeated Outcome outcomes = 1;

    // The continuation token, which is used to page through large result sets.
    // Provide this value in a subsequent request to return the next page of
    // results. This field will be empty if there aren't any additional results.
    string next_page_token = 2;
    }

// ======================================================
// Complication
// ======================================================
// This request maps to the body of `POST /complications/search` as JSON.
message SearchComplicationsRequest {
    // Optionally specify the dataset to search within.
    string dataset_id = 1;

    // Returns Complications with the given name found by case-sensitive string matching.
    string name = 2;

    // Filter on any of the fields
    repeated Filter filters = 3;

    // Specifies the maximum number of results to return in a single page.
    // If unspecified, a system default will be used.
    int32 page_size = 4;

    // The continuation token, which is used to page through large result sets.
    // To get the next page of results, set this parameter to the value of
    // `nextPageToken` from the previous response.
    string page_token = 5;
    }

// This request maps to the URL `GET /complications/{complication_id}`.
message GetComplicationRequest {
    // The ID of the complication requested
    string complication_id = 1;
    }

//This is the response from `POST /complications/search` expressed as JSON.
message SearchComplicationsResponse {
    // The list of complications.
    repeated Complication complications = 1;

    // The continuation token, which is used to page through large result sets.
    // Provide this value in a subsequent request to return the next page of
    // results. This field will be empty if there aren't any additional results.
    string next_page_token = 2;
    }

// ======================================================
// Tumourboard
// ======================================================
// This request maps to the body of `POST /tumourboards/search` as JSON.
message SearchTumourboardsRequest {
    // Optionally specify the dataset to search within.
    string dataset_id = 1;

    // Returns Tumourboards with the given name found by case-sensitive string matching.
    string name = 2;

    // Filter on any of the fields
    repeated Filter filters = 3;

    // Specifies the maximum number of results to return in a single page.
    // If unspecified, a system default will be used.
    int32 page_size = 4;

    // The continuation token, which is used to page through large result sets.
    // To get the next page of results, set this parameter to the value of
    // `nextPageToken` from the previous response.
    string page_token = 5;
    }

// This request maps to the URL `GET /tumourboards/{tumourboard_id}`.
message GetTumourboardRequest {
    // The ID of the tumourboard requested
    string tumourboard_id = 1;
    }

//This is the response from `POST /tumourboards/search` expressed as JSON.
message SearchTumourboardsResponse {
    // The list of tumourboards.
    repeated Tumourboard tumourboards = 1;

    // The continuation token, which is used to page through large result sets.
    // Provide this value in a subsequent request to return the next page of
    // results. This field will be empty if there aren't any additional results.
    string next_page_token = 2;
    }


// ======================================================
// Chemotherapy
// ======================================================
// This request maps to the body of `POST /chemotherapies/search` as JSON.
message SearchChemotherapiesRequest {
    // Optionally specify the dataset to search within.
    string dataset_id = 1;

    // Returns Chemotherapies with the given name found by case-sensitive string matching.
    string name = 2;

    // Filter on any of the fields
    repeated Filter filters = 3;

    // Specifies the maximum number of results to return in a single page.
    // If unspecified, a system default will be used.
    int32 page_size = 4;

    // The continuation token, which is used to page through large result sets.
    // To get the next page of results, set this parameter to the value of
    // `nextPageToken` from the previous response.
    string page_token = 5;
    }

// This request maps to the URL `GET /chemotherapies/{chemotherapy_id}`.
message GetChemotherapyRequest {
    // The ID of the chemotherapy requested
    string chemotherapy_id = 1;
    }

//This is the response from `POST /chemotherapies/search` expressed as JSON.
message SearchChemotherapiesResponse {
    // The list of chemotherapies.
    repeated Chemotherapy chemotherapies = 1;

    // The continuation token, which is used to page through large result sets.
    // Provide this value in a subsequent request to return the next page of
    // results. This field will be empty if there aren't any additional results.
    string next_page_token = 2;
    }

// ======================================================
// Radiotherapy
// ======================================================
// This request maps to the body of `POST /radiotherapies/search` as JSON.
message SearchRadiotherapiesRequest {
    // Optionally specify the dataset to search within.
    string dataset_id = 1;

    // Returns Radiotherapies with the given name found by case-sensitive string matching.
    string name = 2;

    // Filter on any of the fields
    repeated Filter filters = 3;

    // Specifies the maximum number of results to return in a single page.
    // If unspecified, a system default will be used.
    int32 page_size = 4;

    // The continuation token, which is used to page through large result sets.
    // To get the next page of results, set this parameter to the value of
    // `nextPageToken` from the previous response.
    string page_token = 5;
    }

// This request maps to the URL `GET /radiotherapies/{radiotherapy_id}`.
message GetRadiotherapyRequest {
    // The ID of the radiotherapy requested
    string radiotherapy_id = 1;
    }

//This is the response from `POST /radiotherapies/search` expressed as JSON.
message SearchRadiotherapiesResponse {
    // The list of radiotherapies.
    repeated Radiotherapy radiotherapies = 1;

    // The continuation token, which is used to page through large result sets.
    // Provide this value in a subsequent request to return the next page of
    // results. This field will be empty if there aren't any additional results.
    string next_page_token = 2;
    }

// ======================================================
// Surgery
// ======================================================
// This request maps to the body of `POST /surgeries/search` as JSON.
message SearchSurgeriesRequest {
    // Optionally specify the dataset to search within.
    string dataset_id = 1;

    // Returns Surgeries with the given name found by case-sensitive string matching.
    string name = 2;

    // Filter on any of the fields
    repeated Filter filters = 3;

    // Specifies the maximum number of results to return in a single page.
    // If unspecified, a system default will be used.
    int32 page_size = 4;

    // The continuation token, which is used to page through large result sets.
    // To get the next page of results, set this parameter to the value of
    // `nextPageToken` from the previous response.
    string page_token = 5;
    }

// This request maps to the URL `GET /surgeries/{surgery_id}`.
message GetSurgeryRequest {
    // The ID of the surgery requested
    string surgery_id = 1;
    }

//This is the response from `POST /surgeries/search` expressed as JSON.
message SearchSurgeriesResponse {
    // The list of surgeries.
    repeated Surgery surgeries = 1;

    // The continuation token, which is used to page through large result sets.
    // Provide this value in a subsequent request to return the next page of
    // results. This field will be empty if there aren't any additional results.
    string next_page_token = 2;
    }

// ======================================================
// Immunotherapy
// ======================================================
// This request maps to the body of `POST /immunotherapies/search` as JSON.
message SearchImmunotherapiesRequest {
    // Optionally specify the dataset to search within.
    string dataset_id = 1;

    // Returns Immunotherapies with the given name found by case-sensitive string matching.
    string name = 2;

    // Filter on any of the fields
    repeated Filter filters = 3;

    // Specifies the maximum number of results to return in a single page.
    // If unspecified, a system default will be used.
    int32 page_size = 4;

    // The continuation token, which is used to page through large result sets.
    // To get the next page of results, set this parameter to the value of
    // `nextPageToken` from the previous response.
    string page_token = 5;
    }

// This request maps to the URL `GET /immunotherapies/{immunotherapy_id}`.
message GetImmunotherapyRequest {
    // The ID of the immunotherapy requested
    string immunotherapy_id = 1;
    }

//This is the response from `POST /immunotherapies/search` expressed as JSON.
message SearchImmunotherapiesResponse {
    // The list of immunotherapies.
    repeated Immunotherapy immunotherapies = 1;

    // The continuation token, which is used to page through large result sets.
    // Provide this value in a subsequent request to return the next page of
    // results. This field will be empty if there aren't any additional results.
    string next_page_token = 2;
    }

// ======================================================
// Celltransplant
// ======================================================
// This request maps to the body of `POST /celltransplants/search` as JSON.
message SearchCelltransplantsRequest {
    // Optionally specify the dataset to search within.
    string dataset_id = 1;

    // Returns Celltransplants with the given name found by case-sensitive string matching.
    string name = 2;

    // Filter on any of the fields
    repeated Filter filters = 3;

    // Specifies the maximum number of results to return in a single page.
    // If unspecified, a system default will be used.
    int32 page_size = 4;

    // The continuation token, which is used to page through large result sets.
    // To get the next page of results, set this parameter to the value of
    // `nextPageToken` from the previous response.
    string page_token = 5;
    }

// This request maps to the URL `GET /celltransplants/{celltransplant_id}`.
message GetCelltransplantRequest {
    // The ID of the celltransplant requested
    string celltransplant_id = 1;
    }

//This is the response from `POST /celltransplants/search` expressed as JSON.
message SearchCelltransplantsResponse {
    // The list of celltransplants.
    repeated Celltransplant celltransplants = 1;

    // The continuation token, which is used to page through large result sets.
    // Provide this value in a subsequent request to return the next page of
    // results. This field will be empty if there aren't any additional results.
    string next_page_token = 2;
    }

// ======================================================
// Slide
// ======================================================
// This request maps to the body of `POST /slides/search` as JSON.
message SearchSlidesRequest {
    // Optionally specify the dataset to search within.
    string dataset_id = 1;

    // Returns Slides with the given name found by case-sensitive string matching.
    string name = 2;

    // Filter on any of the fields
    repeated Filter filters = 3;

    // Specifies the maximum number of results to return in a single page.
    // If unspecified, a system default will be used.
    int32 page_size = 4;

    // The continuation token, which is used to page through large result sets.
    // To get the next page of results, set this parameter to the value of
    // `nextPageToken` from the previous response.
    string page_token = 5;
    }

// This request maps to the URL `GET /slides/{slide_id}`.
message GetSlideRequest {
    // The ID of the slide requested
    string slide_id = 1;
    }

//This is the response from `POST /slides/search` expressed as JSON.
message SearchSlidesResponse {
    // The list of slides.
    repeated Slide slides = 1;

    // The continuation token, which is used to page through large result sets.
    // Provide this value in a subsequent request to return the next page of
    // results. This field will be empty if there aren't any additional results.
    string next_page_token = 2;
    }

// ======================================================
// Study
// ======================================================
// This request maps to the body of `POST /studies/search` as JSON.
message SearchStudiesRequest {
    // Optionally specify the dataset to search within.
    string dataset_id = 1;

    // Returns Studies with the given name found by case-sensitive string matching.
    string name = 2;

    // Filter on any of the fields
    repeated Filter filters = 3;

    // Specifies the maximum number of results to return in a single page.
    // If unspecified, a system default will be used.
    int32 page_size = 4;

    // The continuation token, which is used to page through large result sets.
    // To get the next page of results, set this parameter to the value of
    // `nextPageToken` from the previous response.
    string page_token = 5;
    }

// This request maps to the URL `GET /studies/{study_id}`.
message GetStudyRequest {
    // The ID of the study requested
    string study_id = 1;
    }

//This is the response from `POST /studies/search` expressed as JSON.
message SearchStudiesResponse {
    // The list of studies.
    repeated Study studies = 1;

    // The continuation token, which is used to page through large result sets.
    // Provide this value in a subsequent request to return the next page of
    // results. This field will be empty if there aren't any additional results.
    string next_page_token = 2;
    }

// ======================================================
// Labtest
// ======================================================
// This request maps to the body of `POST /labtests/search` as JSON.
message SearchLabtestsRequest {
    // Optionally specify the dataset to search within.
    string dataset_id = 1;

    // Returns Labtests with the given name found by case-sensitive string matching.
    string name = 2;

    // Filter on any of the fields
    repeated Filter filters = 3;

    // Specifies the maximum number of results to return in a single page.
    // If unspecified, a system default will be used.
    int32 page_size = 4;

    // The continuation token, which is used to page through large result sets.
    // To get the next page of results, set this parameter to the value of
    // `nextPageToken` from the previous response.
    string page_token = 5;
    }

// This request maps to the URL `GET /labtests/{labtest_id}`.
message GetLabtestRequest {
    // The ID of the labtest requested
    string labtest_id = 1;
    }

//This is the response from `POST /labtests/search` expressed as JSON.
message SearchLabtestsResponse {
    // The list of labtests.
    repeated Labtest labtests = 1;

    // The continuation token, which is used to page through large result sets.
    // Provide this value in a subsequent request to return the next page of
    // results. This field will be empty if there aren't any additional results.
    string next_page_token = 2;
    }
