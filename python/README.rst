
====================
CanDIG Schemas
====================


This is the CanDIG schemas compiled as `Protocol Buffers <https://developers.google.com/protocol-buffers/>`_ descriptors. It can be used to describe and serialize genomics data using a standard interchange format. It has been built on the original ga4gh-schemas with extended support on metadata and complex search queries.

To learn more about the CanDIG project or to contact us, please visit https://www.distributedgenomics.ca.

###########
Development
###########

First, checkout out the source tree, create a new virtual environment, and
activate. Then you'll install the development requirements and process the
*.proto into compiled Python bindings.

This requires having protoc >3.0.0 installed. You can find source and binary
releases `here <https://github.com/google/protobuf>`_.

.. code-block:: bash

    git clone git@github.com:candig/candig-schemas.git
    cd candig-schemas
    virtualenv env
    source env/bin/activate
    pip install -r python/dev-requirements.txt
    python setup.py develop
    cd python
    python -m nose tests

The generated protocol buffers bindings are not checked into the source tree,
but are generated by the developer when making changes. To regenerate the
bindings you can run `python setup.py develop`, which will process the schemas
into the compiled python classes.

You can then make modifications to the files in `src/main/proto` and rerun the
compilation using the same method. If successful, it will overwrite any bindings
currently in the directory. If you are making and deleting new proto files,
you may end up with compiled bindings in your directory that you aren't using.
These are ignored by git and if not imported, will not affect your code.